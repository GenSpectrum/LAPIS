const {
  isOkay,
  checkPayloadFromSchema,

  apiUrl,
  server,
  openness,
} = require('./shared')


if (openness === 'open') {
  describe('Endpoint sample/details', () => {
    const endpoint = '/sample/details';

    const params1 = '?aaMutations=S:n501y&pangoLineage=B.1.617.2*';
    it(params1 + ' - Delta with S:501Y', (done) => {
      isOkay(server.get(endpoint + params1))
        .expect(checkPayloadFromSchema({
          elements: {
            properties: {
              date: {type: 'timestamp', nullable: true},
              dateSubmitted: {type: 'timestamp', nullable: true},
              region: {type: 'string', nullable: true},
              country: {type: 'string', nullable: true},
              division: {type: 'string', nullable: true},
              location: {type: 'string', nullable: true},
              regionExposure: {type: 'string', nullable: true},
              countryExposure: {type: 'string', nullable: true},
              divisionExposure: {type: 'string', nullable: true},
              age: {type: 'uint32', nullable: true},
              sex: {type: 'string', nullable: true},
              hospitalized: {type: 'boolean', nullable: true},
              died: {type: 'boolean', nullable: true},
              fullyVaccinated: {type: 'boolean', nullable: true},
              host: {type: 'string', nullable: true},
              samplingStrategy: {type: 'string', nullable: true},
              pangoLineage: {type: 'string', nullable: true},
              nextstrainClade: {type: 'string', nullable: true},
              gisaidCloade: {type: 'string', nullable: true},
              submittingLab: {type: 'string', nullable: true},
              originatingLab: {type: 'string', nullable: true},
              genbankAccession: {type: 'string', nullable: true},
              sraAccession: {type: 'string', nullable: true},
              gisaidEpiIsl: {type: 'string', nullable: true},
              strain: {type: 'string', nullable: true},
            }
          }
        }))
        .end(done);
    });
  });

  // TODO: Test fasta endpoints
}
