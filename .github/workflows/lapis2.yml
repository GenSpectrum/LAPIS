name: LAPIS v2

on: [push]

env:
  DOCKER_IMAGE_NAME: ghcr.io/genspectrum/lapis-v2

jobs:
  Tests:
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v4
      -
        name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
      -
        name: Execute Tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test
          build-root-directory: lapis2
      -
        name: Check Format And Lint
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ktlintCheck
          build-root-directory: lapis2

  dockerImage:
    name: Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      -
        uses: actions/checkout@v4
      -
        name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Docker metadata
        id: dockerMetadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch,enable=${{ github.ref != 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
      -
        name: Build Docker Image For Branch
        uses: gradle/gradle-build-action@v2
        env:
          USER: ${{ github.actor }}
          TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          arguments: bootBuildImage --imageName=${{ steps.dockerMetadata.outputs.tags }}
          build-root-directory: lapis2
      -
        name: Push Docker Image For Branch
        run: docker push ${{ steps.dockerMetadata.outputs.tags }}
      -
        name: Build "public" Docker Image
        if: ${{ github.ref == 'refs/heads/public' }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bootBuildImage --imageName=${{ env.DOCKER_IMAGE_NAME }}:public
          build-root-directory: lapis2
      -
        name: Push "public" Docker Image
        if: ${{ github.ref == 'refs/heads/public' }}
        run: docker push ${{ env.DOCKER_IMAGE_NAME }}:public

  endToEndTests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Build OpenAPI Spec
        uses: gradle/gradle-build-action@v2
        with:
          arguments: generateOpenApiDocs
          build-root-directory: lapis2

      - name: Prepare Tests
        run: |
          cd siloLapisTests
          npm ci
          npm run generateLapisClient

      - name: Check Format
        run: cd siloLapisTests && npm run check-format

      - name: Docker metadata
        id: dockerMetadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch,enable=${{ github.ref != 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Get LAPIS Branch Tag
        id: lapisBranchTag
        env:
          TAG: ${{ steps.dockerMetadata.outputs.tags }}
        run: echo "lapisTag=${TAG##*:}" >> $GITHUB_OUTPUT

      - name: Wait for Docker Image
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: Build Docker Image
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Start SILO and LAPIS and Run Tests
        run: |
          docker compose -f lapis2/docker-compose.yml up -d --wait
          cd siloLapisTests && npm run test
        env:
          SILO_TAG: latest
          LAPIS_TAG: ${{ steps.lapisBranchTag.outputs.lapisTag }}

      - name: Store Logs
        if: ${{ always() }}
        run: |
          cd lapis2
          mkdir p e2e-logs
          docker compose logs silo > e2e-logs/silo.log
          docker compose logs lapis > e2e-logs/lapis.log
        env:
          SILO_TAG: latest
          LAPIS_TAG: ${{ steps.lapisBranchTag.outputs.lapisTag }}

      - name: Upload logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: lapis2/e2e-logs
