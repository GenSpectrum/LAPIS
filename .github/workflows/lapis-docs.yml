name: LAPIS Docs

on: [push]

env:
  DOCKER_IMAGE_NAME: ghcr.io/genspectrum/lapis-docs

defaults:
  run:
    working-directory: ./lapis-docs

jobs:
  checks:
    name: Check format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('lapis-docs/**/package-lock.json') }}
      - run: npm ci
      - run: npm run check-format
      - run: npm run check-types

  dockerImage:
    name: Build Docs Docker Image And Run E2E Tests
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: dockerMetadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch,enable=${{ github.ref != 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: ./lapis-docs
          push: true
          tags: ${{ steps.dockerMetadata.outputs.tags }}

      - name: Start Docker container and check that it responds
        run: |
          docker compose -f test-docker-compose.yml up -d --wait
        env:
          IMAGE: ${{ steps.dockerMetadata.outputs.tags }}

      - name: Get Installed Playwright Version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').packages['node_modules/@playwright/test'].version)")" >> $GITHUB_ENV

      - name: Cache Playwright Browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Install only System Dependencies
        run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit == 'true'

      - name: Run E2E test
        run: npm run e2e

      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: playwright-report
          path: lapis-docs/playwright-report/
          retention-days: 7
